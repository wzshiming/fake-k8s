#!/usr/bin/env bash

# https://github.com/kubernetes/website/blob/main/content/en/docs/reference/command-line-tools-reference/feature-gates.md
# Some details of the feature gate on the official website are not synchronized so here we use a script to get the real details in the code

latest_release="${1:-24}"

function features() {

    for i in $(seq 6 "${latest_release}"); do
        curl -sSL "https://github.com/kubernetes/kubernetes/raw/release-1.${i}/pkg/features/kube_features.go" |
            grep "{Default: " |
            sed -e 's/\w\+\.//g' |
            sed -e 's/[:,}]//g' |
            awk "{print \$1, \$5, $i}"
    done
}

function gen() {
    echo "package k8s"
    echo
    echo "// Don't edit this file directly.  It is generated by feature_gates_data.sh."
    echo "var rawData = []FeatureSpec{"
    raw="$(features | sort)"

    raw="${raw//ExperimentalHostUserNamespaceDefaultingGate/ExperimentalHostUserNamespaceDefaulting}"

    gates="$(echo "${raw}" | awk '{print $1}' | sort -u)"

    for gate in ${gates}; do
        stage="$(echo "${raw}" | grep -e "^${gate} " | awk '{print $2}' | sort -u)"
        since_release=""
        until_release=""

        echo
        echo "	// ${gate}"
        for s in ${stage}; do
            release="$(echo "${raw}" | grep -e "^${gate} ${s} " | awk '{print $3}' | sort -n)"
            since_release="$(echo "${release}" | head -n 1)"
            until_release="$(echo "${release}" | tail -n 1)"
            if [[ "${until_release}" == "${latest_release}" ]]; then
                until_release="-1"
            fi
            echo "	{\"${gate}\", ${s}, ${since_release}, ${until_release}},"
        done
    done
    echo "}"
}

function gen_file() {
    gen >feature_gates_data.go
}

gen_file
