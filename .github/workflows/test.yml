name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

env:
  FAKE_KUBELET_IMAGE: fake-kubelet:test

jobs:
  build-fake-k8s:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: wzshiming/fake-k8s
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.18
      - name: Build fake-k8s
        run: |
          go build -o fake-k8s ./cmd/fake-k8s
      - name: Upload fake-k8s
        uses: actions/upload-artifact@v2
        with:
          name: binary
          path: fake-k8s

  build-fake-kubelet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: wzshiming/fake-kubelet
      - name: Build image
        run: |
          docker build -t "${FAKE_KUBELET_IMAGE}" .
          docker save "${FAKE_KUBELET_IMAGE}" -o image.tar
      - name: Upload image tar
        uses: actions/upload-artifact@v2
        with:
          name: image
          path: image.tar

  e2e-test-kind:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
      - build-fake-kubelet
    steps:
      - uses: actions/checkout@v2
      - name: Download for image tar
        uses: actions/download-artifact@v2
        with:
          name: image
      - name: Load image tar
        run: |
          docker load -i image.tar
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          RUNTIME=kind ./fake-k8s.test.sh $(cat supported_releases.txt | head -n 9)

  e2e-mock-test-kind:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
      - build-fake-kubelet
    steps:
      - uses: actions/checkout@v2
      - name: Download for image tar
        uses: actions/download-artifact@v2
        with:
          name: image
      - name: Load image tar
        run: |
          docker load -i image.tar
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          RUNTIME=kind ./fake-k8s.mock.test.sh $(cat supported_releases.txt | head -n 1)

  e2e-test-binary:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
    steps:
      - uses: actions/checkout@v2
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          RUNTIME=binary ./fake-k8s.test.sh $(cat supported_releases.txt | head -n 12)

  e2e-mock-test-binary:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
    steps:
      - uses: actions/checkout@v2
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          RUNTIME=binary ./fake-k8s.mock.test.sh $(cat supported_releases.txt | head -n 1)

  e2e-benchmark-test-binary:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
    steps:
      - uses: actions/checkout@v2
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run benchmark test
        run: |
          chmod +x fake-k8s
          RUNTIME=binary ./fake-k8s.benchmark.test.sh $(cat supported_releases.txt | head -n 1)

  e2e-test-compose:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
      - build-fake-kubelet
    steps:
      - uses: actions/checkout@v2
      - name: Download for image tar
        uses: actions/download-artifact@v2
        with:
          name: image
      - name: Load image tar
        run: |
          docker load -i image.tar
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          ./fake-k8s.test.sh $(cat supported_releases.txt)

  e2e-mock-test-compose:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
      - build-fake-kubelet
    steps:
      - uses: actions/checkout@v2
      - name: Download for image tar
        uses: actions/download-artifact@v2
        with:
          name: image
      - name: Load image tar
        run: |
          docker load -i image.tar
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run test
        run: |
          chmod +x fake-k8s
          ./fake-k8s.mock.test.sh $(cat supported_releases.txt | head -n 1)

  e2e-benchmark-test-compose:
    runs-on: ubuntu-latest
    needs:
      - build-fake-k8s
      - build-fake-kubelet
    steps:
      - uses: actions/checkout@v2
      - name: Download for image tar
        uses: actions/download-artifact@v2
        with:
          name: image
      - name: Load image tar
        run: |
          docker load -i image.tar
      - name: Download for binary
        uses: actions/download-artifact@v2
        with:
          name: binary
      - name: Run benchmark test
        run: |
          chmod +x fake-k8s
          ./fake-k8s.benchmark.test.sh $(cat supported_releases.txt | head -n 1)
